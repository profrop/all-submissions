# -*- coding: utf-8 -*-
"""assignment 14 submission

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eK0qYeRNhr7quxP_FB2slxda1tH05M-j
"""

# Q1. Implement the function that meets the specification below:

# def student_score_summary(scores, threshold):
#     """
#     scores: a dictionary mapping student names (str) to total scores (int).
#     threshold: an integer score threshold.

#     Returns a list of student names who scored above the threshold.
#     The list should be sorted alphabetically.
#     """
#     # Your code here

# # Examples:
# students = {"Alice": 85, "Bob": 92, "Charlie": 78, "Daisy": 95}
# print(student_score_summary(students, 80))   # prints ['Alice', 'Bob', 'Daisy']
# print(student_score_summary(students, 100))  # prints []

def student_score_summary(scores, threshold):
    try:
        # Ensure inputs are valid
        assert isinstance(scores, dict), "Scores must be a dictionary"
        assert isinstance(threshold, int), "Threshold must be an integer"

        # Collect names of students who scored above the threshold
        result = [name for name, score in scores.items() if score > threshold]

        # Sort the names alphabetically
        result.sort()

        return result

    except AssertionError as e:
        print("AssertionError:", e)
    except Exception as e:
        print("An unexpected error occurred:", e)

students = {
    "Alice": 85,
    "Bob": 92,
    "Charlie": 76,
    "Daisy": 95
}

print(student_score_summary(students, 80))
print(student_score_summary(students, 100))

# Q2. Implement the function that meets the specification below:

# def merge_inventory(inv1, inv2):
#     """
#     inv1 and inv2 are dictionaries mapping item names (str) to quantities (int).

#     Returns a new dictionary that combines both inventories.
#     If an item appears in both, their quantities are summed.
#     """
#     # Your code here

# # Examples:
# inv1 = {"pen": 10, "notebook": 5}
# inv2 = {"notebook": 3, "eraser": 7}
# print(merge_inventory(inv1, inv2))  # prints {'pen': 10, 'notebook': 8, 'eraser': 7}

def merge_inventory(inv1, inv2):
    """
    inv1 and inv2 are dictionaries mapping item names (str) to quantities (int).

    Returns a new dictionary that combines both inventories.
    If an item appears in both, their quantities are summed.
    """
    try:
        # Check inputs
        assert isinstance(inv1, dict), "inv1 must be a dictionary"
        assert isinstance(inv2, dict), "inv2 must be a dictionary"

        merged = inv1.copy()  # Start with items from inv1

        for item, qty in inv2.items():
            if item in merged:
                merged[item] += qty  # Add quantities if item exists
            else:
                merged[item] = qty   # Add new item

        return merged

    except AssertionError as e:
        print("AssertionError:", e)
    except Exception as e:
        print("An unexpected error occurred:", e)
inv1 = {"pen": 10, "notebook": 5}
inv2 = {"notebook": 3, "eraser": 7}
print(merge_inventory(inv1, inv2))